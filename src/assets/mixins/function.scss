// 功能
// font-size
@mixin func-fontSize($size) {
  .f-fz#{$size} {
    font-size: $size + px !important;
  }
}

// position
@mixin func-position() {
  .f-pr {
    position: relative !important;
  }

  .f-pa {
    position: absolute !important;
  }

  .f-pf {
    position: fixed !important;
  }

  .f-ps {
    position: sticky !important;
  }
}

// display
@mixin func-display() {
  .f-dn {
    display: none !important;
  }

  .f-df {
    display: flex !important;
  }

  .f-dg {
    display: grid !important;
  }

  .f-db {
    display: block !important;
  }

  .f-dib {
    display: inline-block !important;
  }

  .f-dt {
    display: table !important;
  }

  .f-dtc {
    display: table-cell !important;
  }
}

// flex-direction
@mixin func-flex-direction() {
  .f-fd-row {
    flex-direction: row !important;
  }

  .f-fd-column {
    flex-direction: column !important;
  }
}

// just
@mixin func-justFamily() {
  .f-jc {
    &-left {
      justify-content: left;
    }

    &-center {
      justify-content: center;
    }

    &-right {
      justify-content: right;
    }

    &-sb {
      justify-content: space-between;
    }

    &-sa {
      justify-content: space-around;
    }

    &-se {
      justify-content: space-evenly;
    }

    &-start {
      justify-content: start;
    }

    &-end {
      justify-content: end;
    }

    &-fs {
      justify-content: flex-start;
    }

    &-fe {
      justify-content: flex-end;
    }
  }

  .f-js {
    &-left {
      justify-self: left;
    }

    &-center {
      justify-self: center;
    }

    &-right {
      justify-self: right;
    }

    &-start {
      justify-self: start;
    }

    &-end {
      justify-self: end;
    }

    &-fs {
      justify-self: flex-start;
    }

    &-fe {
      justify-self: flex-end;
    }
  }
}

// align
@mixin func-alignFamily() {
  .f-ai {
    &-center {
      align-items: center;
    }

    &-start {
      align-items: start;
    }

    &-end {
      align-items: end;
    }

    &-fs {
      align-items: flex-start;
    }

    &-fe {
      align-items: flex-end;
    }

    &-bl {
      align-items: baseline;
    }
  }

  .f-as {
    &-center {
      align-self: center;
    }

    &-bl {
      align-self: baseline;
    }

    &-auto {
      align-self: auto;
    }

    &-fs {
      align-self: flex-start;
    }

    &-fe {
      align-self: flex-end;
    }
  }
}

// text-align
@mixin func-textAlign() {
  .f-tac {
    text-align: center;
  }

  .f-tal {
    text-align: left;
  }

  .f-tar {
    text-align: right;
  }
}

// over-flow
@mixin func-overFlow() {
  .f-oh {
    overflow: hidden;
  }

  .f-os {
    overflow: scroll;
  }

  .f-oxs {
    overflow-x: scroll;
  }

  .f-oys {
    overflow-y: scroll;
  }
}

// user-select
@mixin func-userSelect() {
  .f-usn {
    user-select: none;
  }
}

// cursor 
@mixin func-cursor {
  .f-cp {
    cursor: pointer;
  }
}

// font
@mixin func-font {
  .f-fsi {
    font-style: italic;
  }

  .f-fwb {
    font-weight: bold;
  }
}

// border
@mixin func-border() {
  .f-bsn {
    border-style: none !important;
  }
}

// grid-template
@mixin func-grid-settings($type, $num, $persent, $row, $column) {
  .f-gs-#{$type} {
    grid-template-columns: repeat($num, $persent);
    grid-gap: $row + px $column + px;
  }
}